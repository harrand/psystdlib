zstrlen ::= func(zstr : u8& -> u64)
{
	ptr : u8& mut := zstr;
	i : u64 mut := 0;
	while(deref ptr != 0)
	{
		ptr = ptr at 1;
		i = i + 1;
	}
	return i;
};

sstr ::= struct
{
	ptr : u8&;
	len : u64;
};

cpymem ::= func(dst : u8 mut&, src : u8&, len : u64 -> v0)
{
	i : u64 mut;
	for(i = 0, i < len, i = i + 1)
	{
		deref(dst at i) = deref(src at i);
	}
};

sstr2zstr ::= func(s : sstr, a : arena mut& -> u8&)
{
	ret : u8 mut& := arena_alloc(a, s.len + 1);
	cpymem(ret, s.ptr, s.len);
	deref(ret at (s.len)) = 0;
	return ret;
};

zstr2sstr ::= func(zstr : u8& -> sstr)
{
	return sstr
	{
		.ptr := zstr;
		.len := zstrlen(zstr);
	};
};

strcpy_n ::= func(dst : u8 mut&, src : u8&, len : u64 -> v0)
{
	i : u64 mut;
	for(i = 0, i < len, i = i + 1)
	{
		deref(dst at i) = deref(src at i);
	}
};

streql_n ::= func(l : u8&, r : u8&, len : u64 -> bool)
{
	i : u64 mut;
	for(i = 0, i < len, i = i + 1)
	{
		if(deref(l at i) != deref(r at i))
		{
			return false;
		}
	}
	return true;
};
