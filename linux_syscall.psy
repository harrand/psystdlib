static if(_linux)
{
	syscall ::= enum
	{
		.read := 0;
		.write := 1;
		.open := 2;
		.close := 3;
		.stat := 4;
		.fstat := 5;

		.mmap := 9;
		.mprotect := 10;
		.munmap := 11;

		.access := 21;

		.execve := 59;
		.exit := 60;

		.mkdir := 83;
		.unlink := 87;

		.clock_gettime := 228;
	};

	syscall0 ::= asm(num : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0";

	syscall1 ::= asm(num : u64 weak, arg0 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi}";

	syscall2 ::= asm(num : u64 weak, arg0 : u64 weak, arg1 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi},{rsi}";

	syscall3 ::= asm(num : u64 weak, arg0 : u64 weak, arg1 : u64 weak, arg2 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi},{rsi},{rdx}";

	syscall4 ::= asm(num : u64 weak, arg0 : u64 weak, arg1 : u64 weak, arg2 : u64 weak, arg3 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi},{rsi},{rdx},{r10}";

	syscall5 ::= asm(num : u64 weak, arg0 : u64 weak, arg1 : u64 weak, arg2 : u64 weak, arg3 : u64 weak, arg4 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi},{rsi},{rdx},{r10},{r8}";

	syscall6 ::= asm(num : u64 weak, arg0 : u64 weak, arg1 : u64 weak, arg2 : u64 weak, arg3 : u64 weak, arg4 : u64 weak, arg5 : u64 weak -> u64 weak) :=
	"syscall" : "={rax},0,{rdi},{rsi},{rdx},{r10},{r8},{r9}";

	write ::= func(fd : s32, buf : u8?, count : u64 -> s64)
	{
		return syscall3(syscall.write@s64, fd, buf, count);
	};
}
